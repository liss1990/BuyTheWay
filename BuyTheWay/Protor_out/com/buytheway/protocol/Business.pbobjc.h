// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com/buytheway/protocol/business.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class AddressInfo;
@class CityInfo;
@class PhoneNumber;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum CardTypeEnum

typedef GPB_ENUM(CardTypeEnum) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  CardTypeEnum_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  CardTypeEnum_UnknownCardTypeCode = 0,

  /** 身份证 */
  CardTypeEnum_Id = 1,

  /** 护照 */
  CardTypeEnum_Passport = 2,

  /** 驾照 Driving license */
  CardTypeEnum_DrivingLicense = 3,
};

GPBEnumDescriptor *CardTypeEnum_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL CardTypeEnum_IsValidValue(int32_t value);

#pragma mark - Enum OrderStatus

typedef GPB_ENUM(OrderStatus) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  OrderStatus_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  OrderStatus_OrderStatusUnknown = 0,

  /**  * 买家预约行程就会产生一个订单id，此时订单需要卖家同意 */
  OrderStatus_OrderStatusToBeConfirmed = 1,

  /** * 买家的预约被卖家拒绝，订单作废 */
  OrderStatus_OrderStatusRejected = 2,

  /** * 卖家已接单，等待买家付款 */
  OrderStatus_OrderStatusTobePayed = 3,

  /** * 买家已付款 */
  OrderStatus_OrderStatusPayed = 4,

  /** * 卖家已收到包裹 */
  OrderStatus_OrderStatusSalerGotPack = 5,

  /** * 买家已收到包裹 */
  OrderStatus_OrderStatusBuyerGotPack = 6,

  /** * 订单已废弃 */
  OrderStatus_OrderStatusDidcarded = 1000,
};

GPBEnumDescriptor *OrderStatus_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL OrderStatus_IsValidValue(int32_t value);

#pragma mark - Enum SellTripTaskStatuEnum

typedef GPB_ENUM(SellTripTaskStatuEnum) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  SellTripTaskStatuEnum_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** "发布行程"), */
  SellTripTaskStatuEnum_Create = 0,

  /** "适配中"),//卖家接受某个买家的任务预约后 就开始是适配中，如果刚刚只能满足一个买家 即可开始进行中 ，则产生订单 */
  SellTripTaskStatuEnum_FitIn = 1,

  /** "部分成单"), */
  SellTripTaskStatuEnum_Order = 2,

  /** "全部成单，任务结束"),// 如果一个卖家的行程能够完成多个买家的单 则生成多笔单，此任务接受不再接受匹配 */
  SellTripTaskStatuEnum_AllOrder = 3,

  /** "异常中止" */
  SellTripTaskStatuEnum_Abort = 1000,
};

GPBEnumDescriptor *SellTripTaskStatuEnum_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL SellTripTaskStatuEnum_IsValidValue(int32_t value);

#pragma mark - BusinessRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface BusinessRoot : GPBRootObject
@end

#pragma mark - PhoneNumber

typedef GPB_ENUM(PhoneNumber_FieldNumber) {
  PhoneNumber_FieldNumber_PhonePre = 1,
  PhoneNumber_FieldNumber_Phone = 2,
};

/**
 * /////////买卖双方 业务直接需要使用到的通用实体
 * 手机号码的实体
 **/
@interface PhoneNumber : GPBMessage

/** 手机区号 比如 +86  一定有+号 +号代表电话用户所处国家的区号 ，86代表电话所属区号 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *phonePre;

/** 电话号码 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *phone;

@end

#pragma mark - CityInfo

typedef GPB_ENUM(CityInfo_FieldNumber) {
  CityInfo_FieldNumber_CountryCode = 4,
  CityInfo_FieldNumber_ProvideCode = 5,
  CityInfo_FieldNumber_CityCode = 6,
};

/**
 * 城市信息实体 航班使用
 **/
@interface CityInfo : GPBMessage

/**
 *    string country = 1; //国家
 *    string provide = 2; //省 美国州
 *    string cityName = 3; //市   市区  ？
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *countryCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *provideCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *cityCode;

@end

#pragma mark - SpaceInfo

typedef GPB_ENUM(SpaceInfo_FieldNumber) {
  SpaceInfo_FieldNumber_SpaceLength = 1,
  SpaceInfo_FieldNumber_SpaceWidth = 2,
  SpaceInfo_FieldNumber_SpaceHeight = 3,
  SpaceInfo_FieldNumber_SpaceWeight = 12,
};

/**
 * space  实体描述
 **/
@interface SpaceInfo : GPBMessage

/** space的长  宽 高 等 单位为cm */
@property(nonatomic, readwrite) int32_t spaceLength;

/** 单位为cm */
@property(nonatomic, readwrite) int32_t spaceWidth;

/** 单位为cm */
@property(nonatomic, readwrite) int32_t spaceHeight;

/** 手提包可以携带的重量（单位克）  保持用户输入，后台转换 */
@property(nonatomic, readwrite) int32_t spaceWeight;

@end

#pragma mark - AddressInfo

typedef GPB_ENUM(AddressInfo_FieldNumber) {
  AddressInfo_FieldNumber_CountryCode = 4,
  AddressInfo_FieldNumber_ProvideCode = 5,
  AddressInfo_FieldNumber_CityCode = 6,
  AddressInfo_FieldNumber_Address = 7,
};

/**
 * 地址信息 地理位置
 **/
@interface AddressInfo : GPBMessage

/**
 *    string country = 1; //国家 ，这些好像不需要，以编码为准
 *    string provide = 2; //省 美国州 这些好像不需要，以编码为准
 *    string city = 3; //市   市区 这些好像不需要，以编码为准
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *countryCode;

/** 统一编码 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *provideCode;

/** 统一编码 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *cityCode;

/** 详细地址 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *address;

@end

#pragma mark - FlightInfo

typedef GPB_ENUM(FlightInfo_FieldNumber) {
  FlightInfo_FieldNumber_StartCityInfo = 1,
  FlightInfo_FieldNumber_EndCityInfo = 2,
  FlightInfo_FieldNumber_FlightInfoNo = 5,
  FlightInfo_FieldNumber_BeginTime = 6,
  FlightInfo_FieldNumber_EndTime = 7,
};

/**
 * 航班信息实体
 **/
@interface FlightInfo : GPBMessage

/** 出发城市实体 */
@property(nonatomic, readwrite, strong, null_resettable) CityInfo *startCityInfo;
/** Test to see if @c startCityInfo has been set. */
@property(nonatomic, readwrite) BOOL hasStartCityInfo;

/** 终点城市实体 */
@property(nonatomic, readwrite, strong, null_resettable) CityInfo *endCityInfo;
/** Test to see if @c endCityInfo has been set. */
@property(nonatomic, readwrite) BOOL hasEndCityInfo;

/** 航班编号 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *flightInfoNo;

/** 航班出发时间 */
@property(nonatomic, readwrite) int64_t beginTime;

/** 航班到达目的地时间 */
@property(nonatomic, readwrite) int64_t endTime;

@end

#pragma mark - AddresseeInfo

typedef GPB_ENUM(AddresseeInfo_FieldNumber) {
  AddresseeInfo_FieldNumber_AddresseeId = 1,
  AddresseeInfo_FieldNumber_Address = 2,
  AddresseeInfo_FieldNumber_ConsigneePhone = 3,
  AddresseeInfo_FieldNumber_ConsigneeName = 4,
  AddresseeInfo_FieldNumber_Default_p = 5,
};

/**
 * 收件人或者寄件人实体 包括省市信息+电话+姓名
 **/
@interface AddresseeInfo : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *addresseeId;

/** 收货人所属地址 */
@property(nonatomic, readwrite, strong, null_resettable) AddressInfo *address;
/** Test to see if @c address has been set. */
@property(nonatomic, readwrite) BOOL hasAddress;

/** 收货人用户电话 */
@property(nonatomic, readwrite, strong, null_resettable) PhoneNumber *consigneePhone;
/** Test to see if @c consigneePhone has been set. */
@property(nonatomic, readwrite) BOOL hasConsigneePhone;

/** 收货人姓名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *consigneeName;

/** 常用地址是否 true 是默认地址   false 是普通的   默认所有的都是false */
@property(nonatomic, readwrite) BOOL default_p;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
