// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com/buytheway/protocol/common.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class RetCode;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum MesCode

/** 正常交互消息相关 */
typedef GPB_ENUM(MesCode) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  MesCode_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  MesCode_UnknownMesCode = 0,

  /** 卖家拒绝预约原因 消息选项 */
  MesCode_MesSpaceFull = 1,

  /** 行程取消 */
  MesCode_MesCancelSelltriptask = 2,

  /** 价格低了 */
  MesCode_MesPriceLow = 3,
};

GPBEnumDescriptor *MesCode_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL MesCode_IsValidValue(int32_t value);

#pragma mark - Enum YesOrNo

/** yes  no 通用枚举 */
typedef GPB_ENUM(YesOrNo) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  YesOrNo_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  YesOrNo_No = 0,
  YesOrNo_Yes = 1,
};

GPBEnumDescriptor *YesOrNo_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL YesOrNo_IsValidValue(int32_t value);

#pragma mark - CommonRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface CommonRoot : GPBRootObject
@end

#pragma mark - RetCode

typedef GPB_ENUM(RetCode_FieldNumber) {
  RetCode_FieldNumber_Code = 1,
  RetCode_FieldNumber_Msg = 2,
};

/**
 *
 * 注意 此中的对应枚举value 需要用各个业务分发的公用枚举类  com.common.enums.ErrorCodeEnum类 进行解析
 *
 * 如枚举项 ACCESS_DENIED(3,"未授权操作")
 **/
@interface RetCode : GPBMessage

/** 存储错误码code */
@property(nonatomic, readwrite) int32_t code;

/** 存储错误消息 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *msg;

@end

#pragma mark - BaseResponse

typedef GPB_ENUM(BaseResponse_FieldNumber) {
  BaseResponse_FieldNumber_RetCode = 1,
};

@interface BaseResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) RetCode *retCode;
/** Test to see if @c retCode has been set. */
@property(nonatomic, readwrite) BOOL hasRetCode;

@end

#pragma mark - PageDataRequest

typedef GPB_ENUM(PageDataRequest_FieldNumber) {
  PageDataRequest_FieldNumber_CurrentPage = 1,
  PageDataRequest_FieldNumber_PageSize = 2,
};

@interface PageDataRequest : GPBMessage

@property(nonatomic, readwrite) int32_t currentPage;

@property(nonatomic, readwrite) int32_t pageSize;

@end

#pragma mark - EncryptedPack

typedef GPB_ENUM(EncryptedPack_FieldNumber) {
  EncryptedPack_FieldNumber_Len = 1,
  EncryptedPack_FieldNumber_PackContent = 2,
};

@interface EncryptedPack : GPBMessage

/** rsa加密 len和packContent的长度不一样的 */
@property(nonatomic, readwrite) int64_t len;

@property(nonatomic, readwrite, copy, null_resettable) NSData *packContent;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
